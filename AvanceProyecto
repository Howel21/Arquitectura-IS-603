package ProyectoSOPLMCC;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Image;
import java.awt.Toolkit;



/**
 *
 * @author Howel
 */





public class LMCC extends javax.swing.JFrame {

    /**
     * Creates new form LMCC
     */
    public LMCC() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }
    
    
    public Image getIconImage(){
        Image retvalue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/lmcclogo.png"));
        return retvalue;
    }
    
    
    
    Thread th = new Thread();
    
    public void pausa() throws InterruptedException{
        Thread.sleep(1000);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        canvas1 = new java.awt.Canvas();
        jScrollPane2 = new javax.swing.JScrollPane();
        simuladorTabla = new javax.swing.JTable();
        btnCompilar = new javax.swing.JButton();
        txtPrueba = new javax.swing.JTextField();
        btnEjecutar = new javax.swing.JButton();
        btnDepurar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblAcumulador = new javax.swing.JLabel();
        lblPC = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblIR = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblFondo = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador - LMCC");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImage(getIconImage());
        setUndecorated(true);
        setResizable(false);
        setType(java.awt.Window.Type.POPUP);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(canvas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 127, -1, -1));

        simuladorTabla.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        simuladorTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"000", "", null},
                {"001", "", null},
                {"002", "", null},
                {"003", "", null},
                {"004", "", null},
                {"005", "", null},
                {"006", "", null},
                {"007", "", null},
                {"008", "", null},
                {"009", "", null},
                {"010", "", null},
                {"011", "", null},
                {"012", "", null},
                {"013", "", null},
                {"014", "", null},
                {"015", "", null},
                {"016", "", null},
                {"017", "", null},
                {"018", "", null},
                {"019", "", null},
                {"020", "", null},
                {"021", "", null},
                {"022", "", null},
                {"023", "", null},
                {"024", "", null},
                {"025", "", null},
                {"026", "", null},
                {"027", "", null},
                {"028", "", null},
                {"029", "", null},
                {"030", "", null},
                {"031", "", null},
                {"032", "", null},
                {"033", "", null},
                {"034", "", null},
                {"035", "", null},
                {"036", "", null},
                {"037", "", null},
                {"038", "", null},
                {"039", "", null},
                {"040", "", null},
                {"042", "", null},
                {"043", "", null},
                {"044", "", null},
                {"045", "", null},
                {"046", "", null},
                {"047", "", null},
                {"048", "", null},
                {"049", "", null},
                {"050", "", null},
                {"051", "", null},
                {"052", "", null},
                {"053", "", null},
                {"054", "", null},
                {"055", "", null},
                {"056", "", null},
                {"057", "", null},
                {"058", "", null},
                {"059", "", null},
                {"060", "", null},
                {"061", "", null},
                {"062", "", null},
                {"063", "", null},
                {"064", "", null},
                {"065", "", null},
                {"066", "", null},
                {"067", "", null},
                {"068", "", null},
                {"069", "", null},
                {"070", "", null},
                {"071", "", null},
                {"072", "", null},
                {"073", "", null},
                {"074", "", null},
                {"075", "", null},
                {"076", "", null},
                {"077", "", null},
                {"078", "", null},
                {"079", "", null},
                {"080", "", null},
                {"081", "", null},
                {"082", "", null},
                {"083", "", null},
                {"084", "", null},
                {"085", "", null},
                {"086", "", null},
                {"087", "", null},
                {"088", "", null},
                {"089", "", null},
                {"090", "", null},
                {"091", "", null},
                {"092", "", null},
                {"093", "", null},
                {"094", "", null},
                {"095", "", null},
                {"096", "", null},
                {"097", "", null},
                {"098", "", null},
                {"099", "", null},
                {"100", "", null}
            },
            new String [] {
                "UbicaciÃ³n", "Contenido", "Instruccion "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        simuladorTabla.setColumnSelectionAllowed(true);
        simuladorTabla.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        simuladorTabla.setMaximumSize(new java.awt.Dimension(2147483647, 1800));
        simuladorTabla.setName("tablaSimulador"); // NOI18N
        jScrollPane2.setViewportView(simuladorTabla);
        simuladorTabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (simuladorTabla.getColumnModel().getColumnCount() > 0) {
            simuladorTabla.getColumnModel().getColumn(0).setResizable(false);
            simuladorTabla.getColumnModel().getColumn(1).setResizable(false);
            simuladorTabla.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 520, 320));

        btnCompilar.setBackground(new java.awt.Color(0, 51, 204));
        btnCompilar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCompilar.setForeground(new java.awt.Color(255, 255, 255));
        btnCompilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/compilar.png"))); // NOI18N
        btnCompilar.setText("Compilar");
        btnCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompilarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCompilar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        txtPrueba.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txtPrueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 570, 74, -1));

        btnEjecutar.setBackground(new java.awt.Color(0, 51, 204));
        btnEjecutar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEjecutar.setForeground(new java.awt.Color(255, 255, 255));
        btnEjecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/play.png"))); // NOI18N
        btnEjecutar.setText("Ejecutar");
        btnEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEjecutarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, -1, -1));

        btnDepurar.setBackground(new java.awt.Color(0, 51, 204));
        btnDepurar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDepurar.setForeground(new java.awt.Color(255, 255, 255));
        btnDepurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/depurar.png"))); // NOI18N
        btnDepurar.setText("Depurar");
        btnDepurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepurarActionPerformed(evt);
            }
        });
